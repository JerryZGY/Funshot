<Window x:Class="KinectPiPi.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="http://schemas.microsoft.com/kinect/2014"
        xmlns:Custom="clr-namespace:KinectPiPi"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        Title="中原大拍拍" Width="1366" Height="768" MaxWidth="1366" MaxHeight="768" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen" Closing="windowClosing">
    <Window.Resources>
        <Style x:Key="StartButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="224"/>
            <Setter Property="Height" Value="126"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Resources/Element/startButton_Normal.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/Element/startButton_Hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/Element/startButton_Select.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="224"/>
            <Setter Property="Height" Value="126"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Resources/Element/leftButton_Normal.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/Element/leftButton_Hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/Element/leftButton_Select.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RightButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="224"/>
            <Setter Property="Height" Value="126"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Resources/Element/rightButton_Normal.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/Element/rightButton_Hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/Element/rightButton_Select.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="288"/>
            <Setter Property="Height" Value="162"/>
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Name="ButtonGrid" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.States>
                                        <VisualState Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                    To="1" Duration="0:0:0.1"/>
                                                <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                    To="1" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.9" Duration="0:0:0.1"/>
                                                <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.9" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                   To="1.1" Duration="0:0:0.1"/>
                                                <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                   To="1.1" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup.States>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Height" Value="200"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="scrollviewerBackground" Fill="{TemplateBinding Background}"/>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="True" CanVerticallyScroll="False" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0">
                                <ScrollContentPresenter.Content>
                                    <ContentPresenter x:Name="PART_ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}">
                                        <ContentPresenter.Margin>
                                            <Binding ConverterParameter="TopBottomLeftRight" Path="ContentMargin" RelativeSource="{RelativeSource TemplatedParent}">
                                            </Binding>
                                        </ContentPresenter.Margin>
                                    </ContentPresenter>
                                </ScrollContentPresenter.Content>
                            </ScrollContentPresenter>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}">
                                <ScrollBar.Style>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Setter Property="Background" Value="White"/>
                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Width" Value="Auto"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                <Setter Property="Background" Value="#FFD2D2D2"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                            <Grid x:Name="horizontalScrollBar" Opacity="1" SnapsToDevicePixels="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                    <ColumnDefinition Width="1E-05*"/>
                                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Rectangle x:Name="horizontalScrollbarBackground" Grid.ColumnSpan="3" Fill="{TemplateBinding Background}" Opacity="1"/>
                                                                <RepeatButton x:Name="horizontalDecreaseRepeatButton" Content="M 4 0 L 4 8 L 0 4 Z" Command="ScrollBar.LineLeftCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Border x:Name="Border" BorderBrush="#FFD2D2D2" BorderThickness="1" Background="{TemplateBinding Background}">
                                                                                            <Path x:Name="Arrow" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="#FF505050" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                    <Track.DecreaseRepeatButton>
                                                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                            <RepeatButton.Style>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                <Rectangle Fill="{TemplateBinding Background}"/>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                        </RepeatButton>
                                                                    </Track.DecreaseRepeatButton>
                                                                    <Track.IncreaseRepeatButton>
                                                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                            <RepeatButton.Style>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                <Rectangle Fill="{TemplateBinding Background}"/>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                        </RepeatButton>
                                                                    </Track.IncreaseRepeatButton>
                                                                    <Track.Thumb>
                                                                        <Thumb x:Name="horizontalScrollThumb">
                                                                            <Thumb.Style>
                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="Background" Value="#FF505050"/>
                                                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Thumb.Style>
                                                                        </Thumb>
                                                                    </Track.Thumb>
                                                                </Track>
                                                                <RepeatButton x:Name="horizontalIncreaseRepeatButton" Content="M 0 0 L 4 4 L 0 8 Z" Grid.Column="2" Command="ScrollBar.LineRightCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Border x:Name="Border" BorderBrush="#FFD2D2D2" BorderThickness="1" Background="{TemplateBinding Background}">
                                                                                            <Path x:Name="Arrow" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="#FF505050" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollBar.Style>
                            </ScrollBar>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HorizontalScrollBarVisibility" Value="Disabled">
                                <Setter Property="Margin" TargetName="PART_ContentPresenter">
                                    <Setter.Value>
                                        <Binding ConverterParameter="TopBottom" Path="ContentMargin" RelativeSource="{RelativeSource TemplatedParent}">
                                        </Binding>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="VerticalScrollBarVisibility" Value="Disabled">
                                <Setter Property="Margin" TargetName="PART_ContentPresenter">
                                    <Setter.Value>
                                        <Binding ConverterParameter="LeftRight" Path="ContentMargin" RelativeSource="{RelativeSource TemplatedParent}">
                                        </Binding>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                                    <Condition Property="VerticalScrollBarVisibility" Value="Disabled"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" TargetName="PART_ContentPresenter" Value="0"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="StartStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" BeginTime="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.Y)" From="500" To="100" Duration="0:0:1" BeginTime="0:0:2">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="EnterMainPageStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" BeginTime="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="CountdownStoryboard">
            <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="#00000000" To="#CC000000" Duration="0:0:0.5">
                <ColorAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </ColorAnimation.EasingFunction>
            </ColorAnimation>
            <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="#CC000000" To="White" Duration="0:0:0.5" BeginTime="0:0:5">
                <ColorAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </ColorAnimation.EasingFunction>
            </ColorAnimation>
            <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="White" To="#CC000000" Duration="0:0:0.5" BeginTime="0:0:5.5">
                <ColorAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </ColorAnimation.EasingFunction>
            </ColorAnimation>
        </Storyboard>
        <Storyboard x:Key="ShowResultStoryboard">
            <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="#CC000000" To="#00000000" Duration="0:0:0.5">
                <ColorAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </ColorAnimation.EasingFunction>
            </ColorAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="-300" Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="-300" Duration="0:0:0.5" BeginTime="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="300" Duration="0:0:0.5" BeginTime="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="-300" Duration="0:0:0.5" BeginTime="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="300" To="-60" Duration="0:0:0.5" BeginTime="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="300" To="65" Duration="0:0:0.5" BeginTime="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="300" To="0" Duration="0:0:0.5" BeginTime="0:0:1.25">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="AgainStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="300" Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="-60" To="300" Duration="0:0:0.5" BeginTime="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="65" To="300" Duration="0:0:0.5" BeginTime="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="-300" To="0" Duration="0:0:0.5"  BeginTime="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="-300" To="0" Duration="0:0:0.5" BeginTime="0:0:1.25">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="-300" To="0" Duration="0:0:0.5" BeginTime="0:0:1.5">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="300" To="0" Duration="0:0:0.5" BeginTime="0:0:1.25">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </Window.Resources>
    <c:KinectRegion Name="KinectRegion" Background="Black">
        <Grid>
            <Grid Name="Grid_MainPage" Background="Black" Opacity="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.RowSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="786"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="144"/>
                    </Grid.RowDefinitions>
                    <Image Grid.Row="0" Grid.RowSpan="3" Source="Resources/lefter.png" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill"/>
                    <Button  Grid.Column="0" Grid.Row="0" Name="Button_ChangeBackground" Content="更換背景" Style="{DynamicResource LeftButtonStyle}" Click="Button_ChangeBackground_Click">
                        <Button.RenderTransform>
                            <TranslateTransform/>
                        </Button.RenderTransform>
                    </Button>
                    <Button  Grid.Column="0" Grid.Row="1" Name="Button_AddIcon" Content="新增貼圖" Style="{DynamicResource LeftButtonStyle}" Click="Button_AddIcon_Click">
                        <Button.RenderTransform>
                            <TranslateTransform/>
                        </Button.RenderTransform>
                    </Button>
                    <Button  Grid.Column="0" Grid.Row="2" Name="Button_ClearIcon" Content="清除貼圖" Style="{DynamicResource LeftButtonStyle}" Click="Button_ClearIcon_Click">
                        <Button.RenderTransform>
                            <TranslateTransform/>
                        </Button.RenderTransform>
                    </Button>
                    <Image Grid.Column="1" Grid.RowSpan="3" Height="600" Width="800" Name ="Image_Background" Source="Resources/Background/CYCU00.jpg" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Image Grid.Column="1" Grid.RowSpan="3" Height="600" Width="800" Name ="Image_BackgroundRemoval" Source="{Binding ImageSource}" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Canvas Grid.Column="1" Grid.RowSpan="3" Name ="canvas" Background="Transparent" MouseLeftButtonDown="CanvasMouseLeftButtonDown" MouseLeftButtonUp="CanvasMouseLeftButtonUp" MouseMove="CanvasMouseMove"/>
                    <Image Grid.Column="1" Grid.RowSpan="3" Name ="Image_Result" Stretch="Fill"/>
                    <Image Grid.RowSpan="3" Grid.Column="2" Source="Resources/righter.png" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill"/>
                    <Viewbox Grid.Column="2" Height="135" Width="230">
                        <Image Grid.Column="2" Name="Image_UserView" Source="{Binding BodyIndexImageSource}" Stretch="UniformToFill" Visibility="Collapsed"/>
                    </Viewbox>
                    <Button Grid.Column="2" Grid.Row="1" Name="Button_Screenshot" Content="拍攝照片" Style="{DynamicResource RightButtonStyle}" Click="Button_Screenshot_Click">
                        <Button.RenderTransform>
                            <TranslateTransform/>
                        </Button.RenderTransform>
                    </Button>
                    <Button  Grid.Column="2" Grid.Row="2" Name="Button_Again" Content="再玩一次" Style="{DynamicResource RightButtonStyle}" Click="Button_Again_Click">
                        <Button.RenderTransform>
                            <TranslateTransform X="300"/>
                        </Button.RenderTransform>
                    </Button>
                    <Image Grid.Column="2" Grid.Row="1" Name="Image_QrCode" Width="120" Height="120">
                        <Image.RenderTransform>
                            <TranslateTransform X="300"/>
                        </Image.RenderTransform>
                    </Image>
                    <Image Grid.Column="2" Grid.Row="1" Name="Image_FBQrCode" Width="120" Height="120">
                        <Image.RenderTransform>
                            <TranslateTransform X="300"/>
                        </Image.RenderTransform>
                    </Image>
                    <Image Grid.Row="3" Grid.ColumnSpan="3" Source="Resources/bottom.png" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill"/>
                </Grid>
                <ScrollViewer Grid.Row="1" Name="ScrollViewer" Height="0" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled" Style="{DynamicResource ScrollViewerStyle}">
                    <WrapPanel Name="WrapPanel" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </ScrollViewer>
                <Grid Name="Grid_Opaque" Grid.Row="0" Background="#00000000" IsHitTestVisible="False">
                    <Label Name="Label_Counter" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" FontSize="130" Foreground="White"/>
                    <Controls:ProgressRing Name="ProgressRing" Width="80" Height="80" Foreground="White" IsActive="False"/>
                </Grid>
            </Grid>
            <Grid Name="Grid_StartPage" Opacity="0">
                <Image Name="Image_StartBackground" Source="Resources/start.png" Stretch="UniformToFill"/>
                <Button Name="Button_Start" Style="{DynamicResource StartButtonStyle}" IsHitTestVisible="False" Click="Button_Start_Click" Width="200" Height="290">
                    <Button.RenderTransform>
                        <TranslateTransform Y="500"/>
                    </Button.RenderTransform>
                </Button>
            </Grid>
        </Grid>
    </c:KinectRegion>
</Window>