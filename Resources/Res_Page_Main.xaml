<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <Style x:Key="Grid_Main" TargetType="{x:Type Grid}">
        <Setter Property="Width" Value="1366"/>
        <Setter Property="Height" Value="768"/>
    </Style>
    <Style x:Key="Grid_Opaque" TargetType="{x:Type Grid}">
        <Setter Property="Width" Value="1366"/>
        <Setter Property="Height" Value="768"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Grid.ColumnSpan" Value="3"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>
    <Style x:Key="Img_Left" TargetType="{x:Type Image}">
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Funshot;component/Materials/Left.png"/>
    </Style>
    <Style x:Key="Img_Right" TargetType="{x:Type Image}">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Funshot;component/Materials/Right.png"/>
    </Style>
    <Style x:Key="Img_Bottom" TargetType="{x:Type Image}">
        <Setter Property="Grid.Row" Value="3"/>
        <Setter Property="Grid.ColumnSpan" Value="3"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Funshot;component/Materials/Bottom.png"/>
    </Style>
    <Style x:Key="Img_BG" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="600"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="Img_Removal" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="600"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>
    <Style x:Key="Img_UserView" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="215"/>
        <Setter Property="Height" Value="145"/>
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>
    <Style x:Key="Cnv" TargetType="{x:Type Canvas}">
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="600"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="Img_Result" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="600"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>
    <Style x:Key="Img_QrCode" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="300"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Tbx_IdleCounter" TargetType="{x:Type TextBlock}">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.Row" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="-18 7 0 0"/>
    </Style>
    <Style x:Key="Tbx_ShotCounter" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="130"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="Btn_Left" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="224"/>
        <Setter Property="Height" Value="126"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="35"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.States>
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="0.9" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="0.9" Duration="0:0:0.1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup.States>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Name="ButtonGrid" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>
                            <Image x:Name="NormalBackground" Source="/Funshot;component/Materials/BtnLeft_Normal.png" Visibility="Visible"/>
                            <Image x:Name="PressedBackground" Source="/Funshot;component/Materials/BtnLeft_Pressed.png" Visibility="Collapsed"/>
                            <Image x:Name="MouseOverBackground" Source="/Funshot;component/Materials/BtnLeft_Over.png" Visibility="Collapsed"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Btn_Right" TargetType="{x:Type Button}">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Width" Value="224"/>
        <Setter Property="Height" Value="126"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="35"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.States>
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="0.9" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="0.9" Duration="0:0:0.1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup.States>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Name="ButtonGrid" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>
                            <Image x:Name="NormalBackground" Source="/Funshot;component/Materials/BtnRight_Normal.png" Visibility="Visible"/>
                            <Image x:Name="PressedBackground" Source="/Funshot;component/Materials/BtnRight_Pressed.png" Visibility="Collapsed"/>
                            <Image x:Name="MouseOverBackground" Source="/Funshot;component/Materials/BtnRight_Over.png" Visibility="Collapsed"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Btn_Start" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="180"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="520"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="ButtonGrid" RenderTransformOrigin=".5 .5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.States>
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="0.9" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="0.9" Duration="0:0:0.1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup.States>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RenderTransform>
                            <ScaleTransform/>
                        </Grid.RenderTransform>
                        <Image x:Name="NormalBackground" Stretch="Uniform" Source="/Funshot;component/Materials/BtnStart_Normal.png" Visibility="Visible"/>
                        <Image x:Name="PressedBackground" Stretch="Uniform" Source="/Funshot;component/Materials/BtnStart_Pressed.png" Visibility="Collapsed"/>
                        <Image x:Name="MouseOverBackground" Stretch="Uniform" Source="/Funshot;component/Materials/BtnStart_Over.png" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Btn_Img" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="288"/>
        <Setter Property="Height" Value="162"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="ButtonGrid" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.States>
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                    To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                    To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.9" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.9" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                   To="1.1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonGrid" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                   To="1.1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup.States>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RenderTransform>
                            <ScaleTransform/>
                        </Grid.RenderTransform>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Height" Value="0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="scrollviewerBackground" Fill="{TemplateBinding Background}"/>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="True" CanVerticallyScroll="False" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0">
                            <ScrollContentPresenter.Content>
                                <ContentPresenter x:Name="PART_ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                            </ScrollContentPresenter.Content>
                        </ScrollContentPresenter>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}">
                            <ScrollBar.Style>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                    <Style.Triggers>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                            <Setter Property="Background" Value="#FFD2D2D2"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                        <Grid x:Name="horizontalScrollBar" Opacity="1" SnapsToDevicePixels="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                <ColumnDefinition Width="1E-05*"/>
                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle x:Name="horizontalScrollbarBackground" Grid.ColumnSpan="3" Fill="{TemplateBinding Background}" Opacity="1"/>
                                                            <RepeatButton x:Name="horizontalDecreaseRepeatButton" Content="M 4 0 L 4 8 L 0 4 Z" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border x:Name="Border" BorderBrush="#FFD2D2D2" BorderThickness="1" Background="{TemplateBinding Background}">
                                                                                        <Path x:Name="Arrow" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="#FF505050" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                            <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                <Track.DecreaseRepeatButton>
                                                                    <RepeatButton>
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.DecreaseRepeatButton>
                                                                <Track.IncreaseRepeatButton>
                                                                    <RepeatButton>
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.IncreaseRepeatButton>
                                                                <Track.Thumb>
                                                                    <Thumb x:Name="horizontalScrollThumb">
                                                                        <Thumb.Style>
                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Background" Value="#FF505050"/>
                                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Thumb.Style>
                                                                    </Thumb>
                                                                </Track.Thumb>
                                                            </Track>
                                                            <RepeatButton x:Name="horizontalIncreaseRepeatButton" Content="M 0 0 L 4 4 L 0 8 Z" Grid.Column="2" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border x:Name="Border" BorderBrush="#FFD2D2D2" BorderThickness="1" Background="{TemplateBinding Background}">
                                                                                        <Path x:Name="Arrow" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="#FF505050" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ScrollBar.Style>
                        </ScrollBar>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                                <Condition Property="VerticalScrollBarVisibility" Value="Disabled"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="PART_ContentPresenter" Value="0"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ProgressRing" TargetType="{x:Type Controls:ProgressRing}">
        <Setter Property="Height" Value="80"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="IsActive" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Storyboard x:Key="Enter">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" BeginTime="0:0:0.5" Storyboard.TargetName="Grid_Main">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" BeginTime="0:0:1.5" Storyboard.TargetName="Img_Removal">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" BeginTime="0:0:1.5" Storyboard.TargetName="Img_UserView">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="Exit">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" Storyboard.TargetName="Grid_Main">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="Countdown">
        <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" To="#CC000000" Duration="0:0:0.5" Storyboard.TargetName="Grid_Opaque">
            <ColorAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </ColorAnimation.EasingFunction>
        </ColorAnimation>
        <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" To="White" Duration="0:0:0.25" BeginTime="0:0:5" Storyboard.TargetName="Grid_Opaque">
            <ColorAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseIn"/>
            </ColorAnimation.EasingFunction>
        </ColorAnimation>
        <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" To="#CC000000" Duration="0:0:0.25" BeginTime="0:0:5.25" Storyboard.TargetName="Grid_Opaque">
            <ColorAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </ColorAnimation.EasingFunction>
        </ColorAnimation>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1" BeginTime="0:0:5.5" Storyboard.TargetName="ProgressRing">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="ShowResult">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1" Storyboard.TargetName="ProgressRing">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" To="#00000000" Duration="0:0:0.5" Storyboard.TargetName="Grid_Opaque">
            <ColorAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </ColorAnimation.EasingFunction>
        </ColorAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="-300" Duration="0:0:0.5" Storyboard.TargetName="Btn_ChangeBG">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="-300" Duration="0:0:0.5" BeginTime="0:0:0.25" Storyboard.TargetName="Btn_AddIcon">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="300" Duration="0:0:0.5" BeginTime="0:0:0.25" Storyboard.TargetName="Btn_Screenshot">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="0" To="-300" Duration="0:0:0.5" BeginTime="0:0:0.5" Storyboard.TargetName="Btn_ClearIcon">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="-300" To="0" Duration="0:0:0.5" BeginTime="0:0:1.25" Storyboard.TargetName="Btn_Print">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.5" BeginTime="0:0:1.25" Storyboard.TargetName="Img_QrCode">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)" From="-300" To="0" Duration="0:0:0.5" BeginTime="0:0:1.5" Storyboard.TargetName="Btn_Again">
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

    </Storyboard>
</ResourceDictionary>